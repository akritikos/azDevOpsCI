<Project>
  <PropertyGroup Label="Project">
    <!-- Prepend organization name to default namespace -->
    <RootNamespace>Kritikos.$(MSBuildProjectName)</RootNamespace>
    <!-- Disable warnings on preview SDK versions -->
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
    <!-- Generate documentation file and ignore warnings for undocumented elements -->
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>1591</NoWarn>
    <!-- Error out upon trying to package projects marked as not packable -->
    <WarnOnPackingNonPackableProject>true</WarnOnPackingNonPackableProject>
        <!-- Enable lock files -->
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
    <!-- Disable nugets from SDK fallback folders -->
    <DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>
    <!-- Locked mode should only be enabled on CI -->
    <RestoreLockedMode Condition="'$(ContinuousIntegrationBuild)' == 'true'">true</RestoreLockedMode>
    <!-- Enable nullable context by default for all projects -->
    <Nullable>enable</Nullable>
    <!-- Enable .NET 5+ native analyzers -->
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>
    <!-- Use latest stable language features -->
    <AnalysisLevel>latest</AnalysisLevel>
    <!-- Use latest language version supported by the SDK -->
    <LangVersion>latest</LangVersion>
    <!-- Use deterministic builds -->
    <Deterministic>true</Deterministic>
  </PropertyGroup>

  <!-- Sets deterministic source paths for CI builds -->
  <PropertyGroup Label="CI Build">
    <!-- https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml#system-variables -->
    <ContinuousIntegrationBuild Condition="'$(TF_BUILD)' == 'true'">true</ContinuousIntegrationBuild>

    <!-- https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables -->
    <ContinuousIntegrationBuild Condition="'$(GITHUB_ACTIONS)' == 'true'">true</ContinuousIntegrationBuild>

    <!-- https://docs.gitlab.com/ee/ci/variables/predefined_variables.html -->
    <ContinuousIntegrationBuild Condition="'$(GITLAB_CI)' == 'true'">true</ContinuousIntegrationBuild>

    <!-- https://www.appveyor.com/docs/environment-variables/ -->
    <ContinuousIntegrationBuild Condition="'$(APPVEYOR)' == 'True'">true</ContinuousIntegrationBuild>
    <ContinuousIntegrationBuild Condition="'$(APPVEYOR)' == 'true'">true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <!-- Enable custom nesting for files -->
  <ItemGroup>
    <ProjectCapability Include="DynamicFileNesting" />
    <ProjectCapability Include="DynamicDependentFile" />
  </ItemGroup>

  <!-- Make internal parts available to testing frameworks -->
  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>$(AssemblyName).Tests</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>

  <!-- Use submodule .NET ruleset for analyzers -->
  <PropertyGroup Label="Code Analysis Ruleset" Condition="Exists('$(MSBuildThisFileDirectory)\.config\dotnet.ruleset')">
    <CodeAnalysisRuleset>$(MSBuildThisFileDirectory)\.config\dotnet.ruleset</CodeAnalysisRuleset>
  </PropertyGroup>

  <!-- Use submodule stylecop configuration -->
  <ItemGroup Label="Code Analysis Configuration" Condition="Exists('$(MSBuildThisFileDirectory)\.config\stylecop.json')">
    <AdditionalFiles Include="$(MSBuildThisFileDirectory)\.config\stylecop.json" Link="stylecop.json" />
  </ItemGroup>

  <PropertyGroup Label="Package">
    <PackageId>$(RootNamespace)</PackageId>
    <Company>Kritikos IO</Company>
    <Authors>Alexandros Kritikos</Authors>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <!-- Optional: Embed source files that are not tracked by the source control manager to the PDB -->
    <!-- This is useful if you generate files during the build -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <!-- Optional: Build symbol package (.snupkg) to distribute the PDB containing Source Link -->
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <PackageLicenseFile>LICENSE.md</PackageLicenseFile>
  </PropertyGroup>

  <!-- <ItemGroup Label="Nugets" Condition="!$(IsTest)">
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="3.3.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.261">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="SerilogAnalyzer" Version="0.15.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="SmartanAlyzers.ExceptionAnalyzer" Version="1.0.10">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="SmartAnalyzers.MultithreadingAnalyzer" Version="1.1.31">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup> -->

  <ItemGroup Label="License Import" Condition="Exists('$(MSBuildThisFileDirectory)\LICENSE.md')">
    <None Include="..\..\LICENSE.md">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <PropertyGroup Label="License" Condition="Exists('$(MSBuildThisFileDirectory)\LICENSE.md')">
    <PackageLicenseFile>LICENSE.md</PackageLicenseFile>
  </PropertyGroup>
</Project>
